profiles{
  gls {
    process.executor                        = 'google-lifesciences'
    workDir                                 = '${NEXTFLOW_WORK_DIR}'
    google.location                         = '${NEXTFLOW_LOCATION}'
    google.zone                             = '${NEXTFLOW_ZONE}'
    google.project                          = '${NEXTFLOW_PROJECT}'
    google.lifeSciences.network             = '${NEXTFLOW_NETWORK}'
    google.lifeSciences.subnetwork          = '${NEXTFLOW_SUBNET}'
    google.lifeSciences.usePrivateAddress   = true
    google.lifeSciences.preemptible         = true
    google.lifeSciences.serviceAccountEmail = '${NEXTFLOW_SERVICE_ACCOUNT}'
    google.lifeSciences.bootDiskSize        = '20 GB'
  }

  gbatch {
    process.executor                      = 'google-batch'
    workDir                               = '${NEXTFLOW_WORK_DIR}'
    google.location                       = '${NEXTFLOW_LOCATION}'
    google.project                        = '${NEXTFLOW_PROJECT}'
    google.batch.network                  = 'global/networks/${NEXTFLOW_NETWORK}'
    google.batch.subnetwork               = 'regions/${NEXTFLOW_LOCATION}/subnetworks/${NEXTFLOW_SUBNET}'
    google.batch.usePrivateAddress        = true
    google.batch.spot                     = true
    google.batch.serviceAccountEmail      = '${NEXTFLOW_SERVICE_ACCOUNT}'
    google.lifeSciences.bootDiskSize      = '20 GB'
  }
  rna {
    params.transcriptome = 'gs://rnaseq-nf/data/ggal/transcript.fa'
    params.reads = 'gs://rnaseq-nf/data/ggal/gut_{1,2}.fq'
    params.multiqc = 'gs://rnaseq-nf/multiqc'
    process.container = 'nextflow/rnaseq-nf:latest'
  }

    gtest {
        params{
            config_profile_name = 'GCP Test profile'
            config_profile_description = 'Basic optimisation'

  
            // Test input data in *.mcd format
            input = '${BUCKET_URL}/data/inputs/20191121_BRAC3438.6f.mcd'
            metadata = '${BUCKET_URL}/data/inputs/metadata.csv'

            full_stack_cppipe = '${BUCKET_URL}/data/plugins/full_stack_preprocessing.cppipe'
            ilastik_stack_cppipe = '${BUCKET_URL}/data/plugins/ilastik_stack_preprocessing.cppipe'
            segmentation_cppipe = '${BUCKET_URL}/data/plugins/segmentation.cppipe'
            ilastik_training_ilp = '${BUCKET_URL}/data/plugins/ilastik_training_params.ilp'
        }
        process {
            executor                        = 'google-lifesciences'
            withName:IMCTOOLS {
                container = 'quay.io/biocontainers/imctools:1.0.5--py_0'
                cpus = 8
                memory = '2 GB'                
                disk ='1000 G'
                machineType = 'c2-standard-8'
                
            }
            withName:output_documentation {
                container = 'quay.io/biocontainers/r-rmarkdown:0.9.5--r3.3.2_0'
                cpus = 2
                disk ='1000 G'
                machineType = 'n2-standard-2'
                
            }
            withName:PREPROCESS_ILASTIK_STACK {
                container = 'cellprofiler/cellprofiler:3.1.9'
                cpus = 8
                disk ='1000 G'
                machineType = 'c2-standard-8'
                
            }
            withName:PREPROCESS_FULL_STACK {
                container = 'cellprofiler/cellprofiler:3.1.9'
                cpus = 8
                disk ='1000 G'
                machineType = 'c2-standard-8'
                
            }
            withName:ILASTIK {
                container = 'ilastik/ilastik-from-binary:1.3.3b1'
                cpus = 8
                disk ='1000 G'
                machineType = 'c2-standard-8'
                
            }
            withName:SEGMENTATION {
                container = 'cellprofiler/cellprofiler:3.1.9'
                cpus = 16
                disk ='1000 G'
                machineType = 'c2-standard-16'
                
            }
            withName:get_software_versions {
                container = 'cellprofiler/cellprofiler:3.1.9'
                cpus = 2
                disk ='1000 G'
                machineType = 'n2-standard-2'
                
            }
        }
    }  


    gtestsaver {
        params{
            config_profile_name = 'GCP Test profile'
            config_profile_description = 'Even more optimisation'

  
            // Test input data in *.mcd format
            input = '${BUCKET_URL}/data/inputs/20191121_BRAC3438.6f.mcd'
            metadata = '${BUCKET_URL}/data/inputs/metadata.csv'

            full_stack_cppipe = '${BUCKET_URL}/data/plugins/full_stack_preprocessing.cppipe'
            ilastik_stack_cppipe = '${BUCKET_URL}/data/plugins/ilastik_stack_preprocessing.cppipe'
            segmentation_cppipe = '${BUCKET_URL}/data/plugins/segmentation.cppipe'
            ilastik_training_ilp = '${BUCKET_URL}/data/plugins/ilastik_training_params.ilp'
        }
        process {
            executor                        = 'google-lifesciences'
            withName:IMCTOOLS {
                container = 'gcr.io/bioinfo-workshop22lon-6099/quay.io/biocontainers/imctools:1.0.5--py_0'
                cpus = 1
                memory = '2 GB'                
                disk ='1000 G'
                machineType = 'n2-highcpu-4'
                
            }
            withName:output_documentation {
                container = 'gcr.io/bioinfo-workshop22lon-6099/quay.io/biocontainers/r-rmarkdown:0.9.5--r3.3.2_0'
                cpus = 1
                memory = '2 GB'                
                disk ='1000 G'
                machineType = 'n2-highcpu-2'
                
            }
            withName:PREPROCESS_ILASTIK_STACK {
                container = 'gcr.io/bioinfo-workshop22lon-6099/cellprofiler/cellprofiler:3.1.9'
                cpus = 1
                memory = '2 GB'                
                disk ='1000 G'
                machineType = 'n2-highcpu-4'
                
            }
            withName:PREPROCESS_FULL_STACK {
                container = 'gcr.io/bioinfo-workshop22lon-6099/cellprofiler/cellprofiler:3.1.9'
                cpus = 1
                memory = '2 GB'                
                disk ='1000 G'
                machineType = 'n2-standard-4'
                
            }
            withName:ILASTIK {
                container = 'gcr.io/bioinfo-workshop22lon-6099/ilastik/ilastik-from-binary:1.3.3b1'
                cpus = 1
                memory = '2 GB'                
                disk ='1000 G'
                machineType = 'n2-highcpu-4'
                
            }
            withName:SEGMENTATION {
                container = 'gcr.io/bioinfo-workshop22lon-6099/cellprofiler/cellprofiler:3.1.9'
                cpus = 1
                memory = '2 GB'                
                disk ='1000 G'
                machineType = 'c2-standard-8'
                
            }
            withName:get_software_versions {
                container = 'gcr.io/bioinfo-workshop22lon-6099/cellprofiler/cellprofiler:3.1.9'
                cpus = 1
                memory = '2 GB'                
                disk ='1000 G'
                machineType = 'n2-highcpu-2'
                
            }
        }
    }  
}

params.tower_enabled = true

tower {
  enabled=params.tower_enabled
  accessToken='[replace with token]'
  //change if using a private tower instance
  endpoint='https://tower.nawar.biz/api'
}
